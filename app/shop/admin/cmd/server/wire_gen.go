// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"casso/app/shop/admin/internal/biz"
	"casso/app/shop/admin/internal/conf"
	"casso/app/shop/admin/internal/data"
	"casso/app/shop/admin/internal/server"
	"casso/app/shop/admin/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"go.opentelemetry.io/otel/sdk/trace"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, registry *conf.Registry, confData *conf.Data, logger log.Logger, tracerProvider *trace.TracerProvider) (*kratos.App, func(), error) {
	db := data.NewDB(confData, logger)
	dataData, cleanup, err := data.NewData(db, logger)
	if err != nil {
		return nil, nil, err
	}
	shopRepo := data.NewShopRepo(dataData, logger)
	shopUseCase := biz.NewShopUseCase(shopRepo, logger)
	shopAdmin := service.NewShopAdmin(shopUseCase, logger)
	httpServer := server.NewHTTPServer(confServer, logger, tracerProvider, shopAdmin)
	grpcServer := server.NewGRPCServer(confServer, logger, tracerProvider, shopAdmin)
	app := newApp(logger, httpServer, grpcServer)
	return app, func() {
		cleanup()
	}, nil
}
